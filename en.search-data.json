{"/obitools4-doc/commands/alignments/obipairing/":{"data":{"":"","description-#Description :":"Synopsis obipairing --forward-reads|-F \u003cFILENAME_F\u003e --reverse-reads|-R \u003cFILENAME_R\u003e [--batch-size \u003cint\u003e] [--compress|-Z] [--debug] [--delta|-D \u003cint\u003e] [--ecopcr] [--embl] [--exact-mode] [--fast-absolute] [--fasta] [--fasta-output] [--fastq] [--fastq-output] [--force-one-cpu] [--gap-penality|-G \u003cfloat64\u003e] [--genbank] [--help|-h|-?] [--input-OBI-header] [--input-json-header] [--json-output] [--max-cpu \u003cint\u003e] [--min-identity|-X \u003cfloat64\u003e] [--min-overlap \u003cint\u003e] [--no-order] [--no-progressbar] [--out|-o \u003cFILENAME\u003e] [--output-OBI-header|-O] [--output-json-header] [--penality-scale \u003cfloat64\u003e] [--pprof] [--pprof-goroutine \u003cint\u003e] [--pprof-mutex \u003cint\u003e] [--skip-empty] [--solexa] [--version] [--without-stat|-S] [\u003cargs\u003e] Options obipairing mandatory options --forward-reads | -F : The name of the file containing the forward reads. --reverse-reads | -R : The name of the file containing the reverse reads. Other obipairing specific options: --delta | -D : Length added to the fast-detected overlap for the exact alignment algorithm (default: 5 nucleotides). --exact-mode: Do not run fast alignment heuristic. (default: a fast algorithm is run at first to accelerate the final exact alignment). --fast-absolute: Compute absolute fast score, this option has no effect in exact mode (default: false). --gap-penality | -G : Gap penality expressed as the multiply factor applied to the mismatch score between two nucleotides with a quality of 40 (default 2). (default: 2.000000) --min-identity | -X : Minimum identity between ovelaped regions of the reads to consider the aligment (default: 0.900000). --min-overlap: Minimum overlap between both the reads to consider the aligment (default: 20). --penality-scale: Scale factor applied to the mismatch score and the gap penality (default 1). --without-stat | -S : Remove alignment statistics from the produced consensus sequences (default: false). Controlling the input data --fasta: Indicate that sequence data is following the FASTA format. --fastq: Indicate that sequence data is following the FASTQ format. --embl: Indicate that sequence data is following the EMBL flatfile format. --genbank: Indicate that sequence data is following the Genbank flatfile format. --ecopcr: Indicate that sequence data is following old ecoPCR tabulated format. --input-OBI-header: FASTA/FASTQ title line annotations follow the old OBI format. --input-json-header: FASTA/FASTQ title line annotations follow the json format. --solexa: Decodes quality string according to the Solexa specification. (default: the standard Sanger encoding is used, env: OBISSOLEXA) Controlling the output data --compress | -Z : Output is compressed using gzip (default: false). --no-order: The OBITools ensure that the order between the input file and the output file does not change. When multiple files are processed, they are processed one at a time. If the –no-order option is added to a command, multiple input files can be opened at the same time and their contents processed in parallel. This usually increases processing speed, but does not guarantee the order of the sequences in the output file. Also, processing multiple files in parallel may require more memory to perform the computation. --fasta-output: Write sequence in fasta format (default if no quality data available). --fastq-output: Write sequence in fastq format (default if quality data available). --json-output: Write sequence in json format. --out | -o \u003cFILENAME\u003e: Filename used for saving the output (default: “-”, the standard output) --output-OBI-header | -O : output FASTA/FASTQ title line annotations follow OBI format (default: JSON). --output-json-header: output FASTA/FASTQ title line annotations follow json format (the default format). --skip-empty: Sequences of length equal to zero are suppressed from the output (default: false). --no-progressbar: Disable the progress bar printing (default: false). General options --help | -h|-? : Show this help. --version: Print the version and exits. Computation related options --max-cpu \u003cINTEGER\u003e: OBITools can take advantage of your computer’s multi-core architecture by parallelizing the computation across all available CPUs. Computing on more CPUs usually requires more memory to perform the computation. Reducing the number of CPUs used to perform a calculation is also a way to indirectly control the amount of memory used by the process. The number of CPUs used by OBITools can also be controlled by setting the OBIMAXCPU environment variable. --force-one-cpu: Force to use only one CPU core for parallel processing (default: false). --batch-size \u003cINTEGER\u003e: Number of sequence per batch for parallel processing (default: 1000, env: OBIBATCHSIZE) Debug related options --debug: Enable debug mode, by setting log level to debug. (default: false, env: OBIDEBUG). --pprof: Enable pprof server. Look at the log for details. (default: false). --pprof-mutex \u003cINTEGER\u003e: Enable profiling of mutex lock. (default: 10, env: OBIPPROFMUTEX) --pprof-goroutine \u003cINTEGER\u003e: Enable profiling of goroutine blocking profile. (default: 6060, env: OBIPPROFGOROUTINE) Examples obipairing --help "},"title":"Obipairing: align the forward and reverse paired reads"},"/obitools4-doc/commands/alignments/obipcr/":{"data":{"":"","description-#Description :":"obipcr is the successor of ecoPCR. It is known as an electronic PCR software.\nSynopsis obipcr --forward \u003cstring\u003e --max-length|-L \u003cint\u003e --reverse \u003cstring\u003e [--allowed-mismatches|-e \u003cint\u003e] [--batch-size \u003cint\u003e] [--circular|-c] [--compress|-Z] [--debug] [--delta|-D \u003cint\u003e] [--ecopcr] [--embl] [--fasta] [--fasta-output] [--fastq] [--fastq-output] [--force-one-cpu] [--fragmented] [--genbank] [--help|-h|-?] [--input-OBI-header] [--input-json-header] [--json-output] [--max-cpu \u003cint\u003e] [--min-length|-l \u003cint\u003e] [--no-order] [--no-progressbar] [--only-complete-flanking] [--out|-o \u003cFILENAME\u003e] [--output-OBI-header|-O] [--output-json-header] [--paired-with \u003cFILENAME\u003e] [--pprof] [--pprof-goroutine \u003cint\u003e] [--pprof-mutex \u003cint\u003e] [--skip-empty] [--solexa] [--version] [\u003cargs\u003e] Options obipcr mandatory options: --forward: The forward primer used for the electronic PCR. IUPAC codes can be used in the pattern. --reverse: The reverse primer used for the electronic PCR. IUPAC codes can be used in the pattern. --max-length | -L : Maximum length of the barcode, primers excluded. Other obipcr specific options: --allowed-mismatches | -e : Maximum number of mismatches allowed for each primer (default: 0). --min-length | -l : Minimum length of the barcode primers excluded (default: no minimum length). --circular | -c : Considers that sequences are circular. (default: sequences are considered linear) --delta | -D : Without this option, only the barcode sequences will be output, without the priming sites. This option allows to add the priming sites and the flanking sequences of the priming sites over a length of delta to each side of the barcode. --only-complete-flanking: Works in conjunction with –delta. Prints only sequences with full-length flanking sequences (default: prints every sequence regardless of whether the flanking sequences are present). Controlling the input data --fasta: Indicate that sequence data is following the FASTA format. --fastq: Indicate that sequence data is following the FASTQ format. --embl: Indicate that sequence data is following the EMBL flatfile format. --genbank: Indicate that sequence data is following the Genbank flatfile format. --ecopcr: Indicate that sequence data is following old ecoPCR tabulated format. --input-OBI-header: FASTA/FASTQ title line annotations follow the old OBI format. --input-json-header: FASTA/FASTQ title line annotations follow the json format. --solexa: Decodes quality string according to the Solexa specification. (default: the standard Sanger encoding is used, env: OBISSOLEXA) Controlling the output data --compress | -Z : Output is compressed using gzip (default: false). --no-order: The OBITools ensure that the order between the input file and the output file does not change. When multiple files are processed, they are processed one at a time. If the –no-order option is added to a command, multiple input files can be opened at the same time and their contents processed in parallel. This usually increases processing speed, but does not guarantee the order of the sequences in the output file. Also, processing multiple files in parallel may require more memory to perform the computation. --fasta-output: Write sequence in fasta format (default if no quality data available). --fastq-output: Write sequence in fastq format (default if quality data available). --json-output: Write sequence in json format. --out | -o \u003cFILENAME\u003e: Filename used for saving the output (default: “-”, the standard output) --output-OBI-header | -O : output FASTA/FASTQ title line annotations follow OBI format (default: JSON). --output-json-header: output FASTA/FASTQ title line annotations follow json format (the default format). --skip-empty: Sequences of length equal to zero are suppressed from the output (default: false). --no-progressbar: Disable the progress bar printing (default: false). General options --help | -h|-? : Show this help. --version: Print the version and exits. Computation related options --max-cpu \u003cINTEGER\u003e: OBITools can take advantage of your computer’s multi-core architecture by parallelizing the computation across all available CPUs. Computing on more CPUs usually requires more memory to perform the computation. Reducing the number of CPUs used to perform a calculation is also a way to indirectly control the amount of memory used by the process. The number of CPUs used by OBITools can also be controlled by setting the OBIMAXCPU environment variable. --force-one-cpu: Force to use only one CPU core for parallel processing (default: false). --batch-size \u003cINTEGER\u003e: Number of sequence per batch for parallel processing (default: 1000, env: OBIBATCHSIZE) Debug related options --debug: Enable debug mode, by setting log level to debug. (default: false, env: OBIDEBUG). --pprof: Enable pprof server. Look at the log for details. (default: false). --pprof-mutex \u003cINTEGER\u003e: Enable profiling of mutex lock. (default: 10, env: OBIPPROFMUTEX) --pprof-goroutine \u003cINTEGER\u003e: Enable profiling of goroutine blocking profile. (default: 6060, env: OBIPPROFGOROUTINE) Examples The minimal ecopcr command looks like this:\nobipcr -L 220 \\ --forward GGGCAATCCTGAGCCAA \\ --reverse CCATTGAGTCTCTGCACCTATC \\ /data/Genbank/Release_261 \\ \u003e Sper01_obipcr.fasta It fetches the sequences from the NCBI Genbank release 261 database stored in the /data/Genbank/Release_261 directory. The output is stored in the Sper01_obipcr.fasta file. The primer pair is specified as GGGCAATCCTGAGCCAA and CCATTGAGTCTCTGCACCTATC using the --forward and --reverse options. These primers correspond to the marker Sper01. The -L option specifies the maximum length of the barcode, primers excluded, here 220 nucleotides. By default no mismatches are allowed between the primers and the priming sites.\nTo allows mismatches between the primers and the priming sites, use the --allowed-mismatches option or its short form -e. Here, the maximum number of mismatches allowed is 3. This maximum number of mismatches is allowed per primer. The error can occur at any position of the primer.\nobipcr -e 3 \\ -L 220 \\ --forward GGGCAATCCTGAGCCAA \\ --reverse CCATTGAGTCTCTGCACCTATC \\ /data/Genbank/Release_261 \\ \u003e Sper01_obipcr.fasta "},"title":"Obipcr: the electronic PCR tool"},"/obitools4-doc/commands/basics/obicount/":{"data":{"":"","#":"Description Count the sequence records in a sequence file. It returns three pieces of information. The first is the number of sequence variants (the actual number of sequence records in the file). Each sequence record is associated with a count attribute (equal to 1 if absent), this number corresponds to the number of times that sequence has been observed in the data set. Thus, the second value returned is the sum of the count values for all sequences. The last value is the number of nucleotides stored in the file, the sum of the sequence lengths.\nSynopsis obicount [--batch-size \u003cint\u003e] [--debug] [--ecopcr] [--embl] [--fasta] [--fastq] [--force-one-cpu] [--genbank] [--help|-h|-?] [--input-OBI-header] [--input-json-header] [--max-cpu \u003cint\u003e] [--no-order] [--pprof] [--pprof-goroutine \u003cint\u003e] [--pprof-mutex \u003cint\u003e] [--reads|-r] [--solexa] [--symbols|-s] [--variants|-v] [--version] [\u003cargs\u003e] Options obicount specific options: --variants | -v : When present, output the number of variants (sequence records) in the sequence file. --reads | -r : When present, output the number of reads (the sum of sequence counts) in the sequence file. --symbols | -s : When present, output the number of symbols (nucleotides) in the sequence file. Controlling the input data --fasta: Indicate that sequence data is following the FASTA format. --fastq: Indicate that sequence data is following the FASTQ format. --embl: Indicate that sequence data is following the EMBL flatfile format. --genbank: Indicate that sequence data is following the Genbank flatfile format. --ecopcr: Indicate that sequence data is following old ecoPCR tabulated format. --input-OBI-header: FASTA/FASTQ title line annotations follow the old OBI format. --input-json-header: FASTA/FASTQ title line annotations follow the json format. --solexa: Decodes quality string according to the Solexa specification. (default: the standard Sanger encoding is used, env: OBISSOLEXA) General options --help | -h|-? : Show this help. --version: Print the version and exits. Computation related options --max-cpu \u003cINTEGER\u003e: OBITools can take advantage of your computer’s multi-core architecture by parallelizing the computation across all available CPUs. Computing on more CPUs usually requires more memory to perform the computation. Reducing the number of CPUs used to perform a calculation is also a way to indirectly control the amount of memory used by the process. The number of CPUs used by OBITools can also be controlled by setting the OBIMAXCPU environment variable. --force-one-cpu: Force to use only one CPU core for parallel processing (default: false). --batch-size \u003cINTEGER\u003e: Number of sequence per batch for parallel processing (default: 1000, env: OBIBATCHSIZE) Debug related options --debug: Enable debug mode, by setting log level to debug. (default: false, env: OBIDEBUG). --pprof: Enable pprof server. Look at the log for details. (default: false). --pprof-mutex \u003cINTEGER\u003e: Enable profiling of mutex lock. (default: 10, env: OBIPPROFMUTEX) --pprof-goroutine \u003cINTEGER\u003e: Enable profiling of goroutine blocking profile. (default: 6060, env: OBIPPROFGOROUTINE) Examples By default the obicount command will output the number of variants, reads and symbols in the sequence file.\nobicount my_sequence_file.fasta INFO[0000] Number of workers set 16 INFO[0000] Found 1 files to process INFO[0000] xxx.fastq.gz mime type: text/fastq entites,n variants,43221 reads,43221 symbols,4391530 The output is in CSV format and can avantageously transformed to Markdown for a prettier output using the csvtomd command.\nobicount my_sequence_file.fasta | csvtomd INFO[0000] Number of workers set 16 INFO[0000] Found 1 files to process INFO[0000] xxx.fastq.gz mime type: text/fastq entites | n ----------|--------- variants | 43221 reads | 43221 symbols | 4391530 the conversion can also be done with the csvlook command from the csvkit package.\nobicount my_sequence_file.fasta | csvlook INFO[0000] Number of workers set 16 INFO[0000] Found 1 files to process INFO[0000] xxx.fastq.gz mime type: text/fastq | entites | n | | -------- | --------- | | variants | 43 221 | | reads | 43 221 | | symbols | 4 391 530 | When using the --variants, --reads or --symbols option, the output only contains the number corresponding to the options specified.\nobicount -v --reads my_sequence_file.fasta | csvlook INFO[0000] Number of workers set 16 INFO[0000] Found 1 files to process INFO[0000] xxx.fastq.gz mime type: text/fastq | entites | n | | -------- | ------ | | variants | 43 221 | | reads | 43 221 | As for all the OBITools commands, the input file can be compressed with gzip.\nobicount my_sequence_file.fasta.gz | csvlook INFO[0000] Number of workers set 16 INFO[0000] Found 1 files to process INFO[0000] xxx.fastq.gz mime type: text/fastq | entites | n | | -------- | --------- | | variants | 43 221 | | reads | 43 221 | | symbols | 4 391 530 | "},"title":"obicount: Counting sequence records"}}